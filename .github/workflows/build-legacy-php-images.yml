name: Build php 7.1/7.2/7.3 images and push to Docker Hub

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      docker_hub_user: ${{ secrets.DOCKER_HUB_USER }}
    strategy:
      fail-fast: false
      matrix:
        php_version: ["7.1"]
        include:
          - php_version: 7.1
            RUNTIME_PACKAGE_DEPS: "msmtp libfreetype6 libjpeg62-turbo libwebp6 unzip git default-mysql-client sudo rsync liblz4-tool bc libmemcached-dev openssh-client sshpass"
            BUILD_PACKAGE_DEPS: "libcurl4-openssl-dev libjpeg-dev libpng-dev libwebp-dev libxml2-dev zlib1g-dev"
            PHP_EXT_DEPS: "curl json xml mbstring zip bcmath soap pdo_mysql gd mysqli"
            PECL_DEPS: "pecl install xdebug-2.9.8 memcached"
            PHP_MEMORY_LIMIT: "-1"
            GD_CONFIG: "--with-jpeg-dir=/usr/local/"
            XDEBUG_INI: "xdebug.ini"
            COMPOSER_VERSION: "2.2"
    steps:
      - name: build and push docker images
        uses: 'OXID-eSales/github-actions/build_docker@v4'
        with:
          dockerhub_username: ${{ secrets.DOCKER_HUB_USER }}
          dockerhub_password: ${{ secrets.DOCKER_HUB_TOKEN }}
          image_name: php
          platforms: linux/amd64,linux/arm64
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
            RUNTIME_PACKAGE_DEPS=${{ matrix.RUNTIME_PACKAGE_DEPS }}
            BUILD_PACKAGE_DEPS=${{ matrix.BUILD_PACKAGE_DEPS }}
            PHP_EXT_DEPS=${{ matrix.PHP_EXT_DEPS }}
            GD_CONFIG=${{ matrix.GD_CONFIG }}
            PECL_DEPS=${{ matrix.PECL_DEPS }}
            XDEBUG_INI=${{ matrix.XDEBUG_INI }}
            COMPOSER_VERSION=${{ matrix.COMPOSER_VERSION }}
          tags: |
            oxidesales/oxideshop-docker-php:${{ matrix.php_version }}

  finish:
    if: always()
    needs: build
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK: "${{ secrets.SLACK_DEVOPS_WEBHOOK_URL }}"
    steps:
      - name: Send custom JSON data to Slack workflow
        if: ${{ always() && env.SLACK_WEBHOOK != '' }}
        uses: 'OXID-eSales/github-actions/slack_status@v4'
        with:
          slack_webhook: ${{ secrets.SLACK_DEVOPS_WEBHOOK_URL }}
          title: '${{ github.workflow }} on ${{ github.repository }} by ${{ github.actor }}'
          summary_list: |
            Repository%${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          job_list: |
            build%${{ needs.build.result }}
